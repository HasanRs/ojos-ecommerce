{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybouchard/Desktop/workspace/ojos/web/pages/products/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport Head from \"next/head\"; // Sanity.io\n\nimport client from \"../../client\";\nimport urlFor from \"../../imageUrlBuilder\"; // Bootstrap\n\nimport Image from \"react-bootstrap/Image\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Overlay from \"react-bootstrap/Overlay\";\n\nconst ProductDetails = props => {\n  const {\n    title,\n    price,\n    sizes,\n    description,\n    image,\n    imageUrl\n  } = props;\n  const [size, setSize] = React.useState();\n  const [show, setShow] = React.useState(false);\n  const target = React.useRef(null);\n  const product = {\n    name: {\n      title\n    },\n    price: {\n      price\n    },\n    quantity: 1,\n    image: {\n      imageUrl\n    },\n    size: {\n      size\n    }\n  };\n  console.log(product);\n\n  const handleChange = event => {\n    setSize(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    id: \"product-details-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"OJOS | \", title), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    id: \"product-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    id: \"product-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    className: \"products\",\n    fluid: true,\n    src: urlFor(image).quality(100).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    id: \"product-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"$\", price), __jsx(\"select\", {\n    ref: target,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), sizes && sizes.map(size => __jsx(\"option\", {\n    value: size,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 43\n    }\n  }, size))), size === undefined ? __jsx(\"button\", {\n    onClick: () => setShow(!show),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Add to Cart\") : __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Add to Cart\"), __jsx(Overlay, {\n    target: target.current,\n    show: show,\n    placement: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, props => __jsx(Tooltip, _extends({\n    id: \"overlay-example\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), \"My Tooltip\")), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Description\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, description), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Sizing\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Complimentary ground shipping on all domestic orders. Returns accepted within 7 days of delivery on full price items. All sale items and masks are final sale. International shipping available to select countries.\"), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Shipping\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Complimentary ground shipping on all domestic orders. Returns accepted within 7 days of delivery on full price items. All sale items and masks are final sale. International shipping available to select countries.\"))));\n}; // Fetching data from Sanity.io with GROQ query\n\n\nProductDetails.getInitialProps = async function (context) {\n  const {\n    slug = \" \"\n  } = context.query;\n  return await client.fetch(`\n    *[_type == \"product\" && slug.current == $slug][0]{title, price, sizes, description, image, slug, \"imageUrl\": image.asset->url}\n  `, {\n    slug\n  });\n};\n\nexport default ProductDetails;","map":{"version":3,"sources":["/Users/tiffanybouchard/Desktop/workspace/ojos/web/pages/products/[slug].js"],"names":["Head","client","urlFor","Image","Tooltip","Overlay","ProductDetails","props","title","price","sizes","description","image","imageUrl","size","setSize","React","useState","show","setShow","target","useRef","product","name","quantity","console","log","handleChange","event","value","quality","url","map","undefined","current","getInitialProps","context","slug","query","fetch"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\n\n// Sanity.io\nimport client from \"../../client\";\nimport urlFor from \"../../imageUrlBuilder\";\n\n// Bootstrap\nimport Image from \"react-bootstrap/Image\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Overlay from \"react-bootstrap/Overlay\";\n\nconst ProductDetails = (props) => {\n  const { title, price, sizes, description, image, imageUrl } = props;\n  const [size, setSize] = React.useState();\n\n  const [show, setShow] = React.useState(false);\n  const target = React.useRef(null);\n\n  const product = {\n    name: { title },\n    price: { price },\n    quantity: 1,\n    image: { imageUrl },\n    size: { size },\n  };\n\n  console.log(product);\n\n  const handleChange = (event) => {\n    setSize(event.target.value);\n  };\n\n  return (\n    <div id=\"product-details-page\">\n      <Head>\n        <title>OJOS | {title}</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <div id=\"product-details-container\">\n        <div id=\"product-image\">\n          <Image\n            className=\"products\"\n            fluid\n            src={urlFor(image).quality(100).url()}\n          />\n        </div>\n        <div id=\"product-details\">\n          <h1>{title}</h1>\n          <p>${price}</p>\n          <select ref={target} onChange={handleChange}>\n            <option></option>\n            {sizes && sizes.map((size) => <option value={size}>{size}</option>)}\n          </select>\n          {size === undefined ? (\n            <button onClick={() => setShow(!show)}>Add to Cart</button>\n          ) : (\n            <button>Add to Cart</button>\n          )}\n          <Overlay target={target.current} show={show} placement=\"right\">\n            {(props) => (\n              <Tooltip id=\"overlay-example\" {...props}>\n                My Tooltip\n              </Tooltip>\n            )}\n          </Overlay>\n          <h4>Description</h4>\n          <p>{description}</p>\n          <h4>Sizing</h4>\n          <p>\n            Complimentary ground shipping on all domestic orders. Returns\n            accepted within 7 days of delivery on full price items. All sale\n            items and masks are final sale. International shipping available to\n            select countries.\n          </p>\n          <h4>Shipping</h4>\n          <p>\n            Complimentary ground shipping on all domestic orders. Returns\n            accepted within 7 days of delivery on full price items. All sale\n            items and masks are final sale. International shipping available to\n            select countries.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Fetching data from Sanity.io with GROQ query\nProductDetails.getInitialProps = async function (context) {\n  const { slug = \" \" } = context.query;\n  return await client.fetch(\n    `\n    *[_type == \"product\" && slug.current == $slug][0]{title, price, sizes, description, image, slug, \"imageUrl\": image.asset->url}\n  `,\n    { slug }\n  );\n};\n\nexport default ProductDetails;\n"]},"metadata":{},"sourceType":"module"}