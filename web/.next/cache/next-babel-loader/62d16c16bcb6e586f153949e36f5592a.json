{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tiffanybouchard/Desktop/workspace/ojos/components/instagram.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction Instagram() {\n  _s();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoaded = _useState4[0],\n      setIsLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      images = _useState6[0],\n      setImages = _useState6[1]; // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n\n\n  useEffect(function () {\n    fetch(\"https://www.instagram.com/tiffbouchard/?__a=1\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoaded(true);\n      setImages(result.graphql);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    function (error) {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  } else if (!isLoaded) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else {\n    return (// <ul>\n      //   {items.map((item) => (\n      //     <li key={item.name}>\n      //       {item.name} {item.price}\n      //     </li>\n      //   ))}\n      // </ul>\n      __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }\n      }, images)\n    );\n  }\n}\n\n_s(Instagram, \"fEeflKynIVFHBaMwWUxO5oMPJTE=\");\n\n_c = Instagram;\nexport default Instagram;\n\nvar _c;\n\n$RefreshReg$(_c, \"Instagram\");","map":{"version":3,"sources":["/Users/tiffanybouchard/Desktop/workspace/ojos/components/instagram.js"],"names":["Instagram","useState","error","setError","isLoaded","setIsLoaded","images","setImages","useEffect","fetch","then","res","json","result","graphql","message"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,GAAqB;AAAA;;AAAA,kBACOC,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MACZC,KADY;AAAA,MACLC,QADK;;AAAA,mBAEaF,QAAQ,CAAC,KAAD,CAFrB;AAAA;AAAA,MAEZG,QAFY;AAAA,MAEFC,WAFE;;AAAA,mBAGSJ,QAAQ,CAAC,EAAD,CAHjB;AAAA;AAAA,MAGZK,MAHY;AAAA,MAGJC,SAHI,kBAKnB;AACA;AACA;;;AACAC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACGC,IADH,CACQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADR,EAEGF,IAFH,CAGI,UAACG,MAAD,EAAY;AACVR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,SAAS,CAACM,MAAM,CAACC,OAAR,CAAT;AACD,KANL,EAOI;AACA;AACA;AACA,cAACZ,KAAD,EAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAbL;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAIA,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACa,OAAnB,CAAP;AACD,GAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFM,MAEA;AACL,WACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIE,MAAJ;AARF;AAUD;AACF;;GA1CQN,S;;KAAAA,S;AA4CT,eAAeA,SAAf","sourcesContent":["function Instagram() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [images, setImages] = useState([]);\n\n  // Note: the empty deps array [] means\n  // this useEffect will run once\n  // similar to componentDidMount()\n  useEffect(() => {\n    fetch(\"https://www.instagram.com/tiffbouchard/?__a=1\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setImages(result.graphql);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      // <ul>\n      //   {items.map((item) => (\n      //     <li key={item.name}>\n      //       {item.name} {item.price}\n      //     </li>\n      //   ))}\n      // </ul>\n      <p>{images}</p>\n    );\n  }\n}\n\nexport default Instagram;\n"]},"metadata":{},"sourceType":"module"}