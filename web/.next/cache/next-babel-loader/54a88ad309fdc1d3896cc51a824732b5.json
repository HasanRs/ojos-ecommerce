{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybouchard/Desktop/workspace/ojos/web/context/shopContext.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Client from \"shopify-buy\";\nconst ShopContext = React.createContext();\nconst client = Client.buildClient({\n  domain: \"ojos-store.myshopify.com\",\n  storefrontAccessToken: \"e52f8498c6bb5dea9c7c6670860b7224\"\n});\n\nclass ShopProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      collection: {},\n      products: [],\n      product: {},\n      checkout: {},\n      checkoutTotal: 0,\n      searchResults: []\n    });\n\n    _defineProperty(this, \"createCheckout\", async () => {\n      const checkout = await client.checkout.create();\n      localStorage.setItem(\"checkout\", checkout.id);\n      this.setState({\n        checkout: checkout\n      });\n    });\n\n    _defineProperty(this, \"fetchCheckout\", async checkoutId => {\n      client.checkout.fetch(checkoutId).then(checkout => {\n        this.setState({\n          checkout: checkout\n        });\n      }).catch(err => console.log(err));\n    });\n\n    _defineProperty(this, \"addItemToCheckout\", async (variantId, quantity) => {\n      const lineItemsToAdd = [{\n        variantId,\n        quantity: parseInt(quantity, 10)\n      }];\n      const checkout = await client.checkout.addLineItems(this.state.checkout.id, lineItemsToAdd);\n      this.setState({\n        checkout: checkout\n      });\n      const checkoutTotal = parseInt(this.state.checkoutTotal, 10) + 1;\n      this.setState({\n        checkoutTotal: checkoutTotal\n      });\n      localStorage.setItem(\"checkoutTotal\", this.state.checkoutTotal);\n    });\n\n    _defineProperty(this, \"removeItemFromCheckout\", async (checkoutId, lineItemsIds) => {\n      const checkoutIdToModify = await checkoutId; // ID of an existing checkout\n\n      const lineItemsIdToRemove = await lineItemsIds; // Remove an item from the checkout\n\n      client.checkout.removeLineItems(checkoutIdToModify, lineItemsIdToRemove).then(checkout => {\n        // Do something with the updated checkout\n        this.setState({\n          checkout: checkout\n        });\n        const checkoutTotal = parseInt(this.state.checkoutTotal, 10) - 1;\n        this.setState({\n          checkoutTotal: checkoutTotal\n        });\n        localStorage.setItem(\"checkoutTotal\", this.state.checkoutTotal);\n      });\n    });\n\n    _defineProperty(this, \"fetchAllProducts\", async () => {\n      const products = await client.product.fetchAll();\n      this.setState({\n        products: products\n      });\n    });\n\n    _defineProperty(this, \"fetchProductByHandle\", async handle => {\n      const product = await client.product.fetchByHandle(handle);\n      this.setState({\n        product: product\n      });\n    });\n\n    _defineProperty(this, \"fetchCollection\", async query => {\n      const collections = await client.collection.fetchAllWithProducts();\n      collections.map(collection => collection.title === query ? this.setState({\n        collection: collection\n      }) : null);\n    });\n\n    _defineProperty(this, \"fetchBySearch\", async query => {\n      const products = await client.collection.fetchAll();\n      const searchResults = products.filter(product => product.title === query);\n      this.setState({\n        searchResults: searchResults\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.checkout) {\n      this.fetchCheckout(localStorage.checkout);\n    } else {\n      this.createCheckout();\n    }\n\n    if (localStorage.checkoutTotal) {\n      const checkoutTotal = localStorage.getItem(\"checkoutTotal\");\n      this.setState({\n        checkoutTotal: checkoutTotal\n      });\n    }\n  }\n\n  // checkIfItemInCart = async (checkout, itemId) => {\n  //   const currentCheckout = checkout;\n  //   for (item in currentCheckout.lineItems) {\n  //     if (item.id === itemId) {\n  //       this.setState({ itemInCart: true });\n  //     }\n  //   }\n  // };\n  render() {\n    return __jsx(ShopContext.Provider, {\n      value: _objectSpread(_objectSpread({}, this.state), {}, {\n        fetchAllProducts: this.fetchAllProducts,\n        fetchProductByHandle: this.fetchProductByHandle,\n        addItemToCheckout: this.addItemToCheckout,\n        removeItemFromCheckout: this.removeItemFromCheckout,\n        fetchCollection: this.fetchCollection\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ShopConsumer = ShopContext.Consumer;\nexport { ShopConsumer, ShopContext };\nexport default ShopProvider;","map":{"version":3,"sources":["/Users/tiffanybouchard/Desktop/workspace/ojos/web/context/shopContext.js"],"names":["Client","ShopContext","React","createContext","client","buildClient","domain","storefrontAccessToken","ShopProvider","Component","collection","products","product","checkout","checkoutTotal","searchResults","create","localStorage","setItem","id","setState","checkoutId","fetch","then","catch","err","console","log","variantId","quantity","lineItemsToAdd","parseInt","addLineItems","state","lineItemsIds","checkoutIdToModify","lineItemsIdToRemove","removeLineItems","fetchAll","handle","fetchByHandle","query","collections","fetchAllWithProducts","map","title","filter","componentDidMount","fetchCheckout","createCheckout","getItem","render","fetchAllProducts","fetchProductByHandle","addItemToCheckout","removeItemFromCheckout","fetchCollection","props","children","ShopConsumer","Consumer"],"mappings":"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","sourcesContent":["import Client from \"shopify-buy\";\n\nconst ShopContext = React.createContext();\n\nconst client = Client.buildClient({\n  domain: \"ojos-store.myshopify.com\",\n  storefrontAccessToken: \"e52f8498c6bb5dea9c7c6670860b7224\",\n});\n\nclass ShopProvider extends React.Component {\n  state = {\n    collection: {},\n    products: [],\n    product: {},\n    checkout: {},\n    checkoutTotal: 0,\n    searchResults: [],\n  };\n\n  componentDidMount() {\n    if (localStorage.checkout) {\n      this.fetchCheckout(localStorage.checkout);\n    } else {\n      this.createCheckout();\n    }\n    if (localStorage.checkoutTotal) {\n      const checkoutTotal = localStorage.getItem(\"checkoutTotal\");\n      this.setState({ checkoutTotal: checkoutTotal });\n    }\n  }\n\n  createCheckout = async () => {\n    const checkout = await client.checkout.create();\n    localStorage.setItem(\"checkout\", checkout.id);\n    this.setState({ checkout: checkout });\n  };\n\n  fetchCheckout = async (checkoutId) => {\n    client.checkout\n      .fetch(checkoutId)\n      .then((checkout) => {\n        this.setState({ checkout: checkout });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  addItemToCheckout = async (variantId, quantity) => {\n    const lineItemsToAdd = [\n      {\n        variantId,\n        quantity: parseInt(quantity, 10),\n      },\n    ];\n    const checkout = await client.checkout.addLineItems(\n      this.state.checkout.id,\n      lineItemsToAdd\n    );\n    this.setState({ checkout: checkout });\n    const checkoutTotal = parseInt(this.state.checkoutTotal, 10) + 1;\n    this.setState({ checkoutTotal: checkoutTotal });\n    localStorage.setItem(\"checkoutTotal\", this.state.checkoutTotal);\n  };\n\n  removeItemFromCheckout = async (checkoutId, lineItemsIds) => {\n    const checkoutIdToModify = await checkoutId; // ID of an existing checkout\n    const lineItemsIdToRemove = await lineItemsIds;\n    // Remove an item from the checkout\n    client.checkout\n      .removeLineItems(checkoutIdToModify, lineItemsIdToRemove)\n      .then((checkout) => {\n        // Do something with the updated checkout\n        this.setState({ checkout: checkout });\n        const checkoutTotal = parseInt(this.state.checkoutTotal, 10) - 1;\n        this.setState({ checkoutTotal: checkoutTotal });\n        localStorage.setItem(\"checkoutTotal\", this.state.checkoutTotal);\n      });\n  };\n\n  fetchAllProducts = async () => {\n    const products = await client.product.fetchAll();\n    this.setState({ products: products });\n  };\n\n  fetchProductByHandle = async (handle) => {\n    const product = await client.product.fetchByHandle(handle);\n    this.setState({ product: product });\n  };\n\n  fetchCollection = async (query) => {\n    const collections = await client.collection.fetchAllWithProducts();\n    collections.map((collection) =>\n      collection.title === query\n        ? this.setState({ collection: collection })\n        : null\n    );\n  };\n\n  fetchBySearch = async (query) => {\n    const products = await client.collection.fetchAll();\n    const searchResults = products.filter((product) => product.title === query);\n    this.setState({ searchResults: searchResults });\n  };\n\n  // checkIfItemInCart = async (checkout, itemId) => {\n  //   const currentCheckout = checkout;\n  //   for (item in currentCheckout.lineItems) {\n  //     if (item.id === itemId) {\n  //       this.setState({ itemInCart: true });\n  //     }\n  //   }\n  // };\n\n  render() {\n    return (\n      <ShopContext.Provider\n        value={{\n          ...this.state,\n          fetchAllProducts: this.fetchAllProducts,\n          fetchProductByHandle: this.fetchProductByHandle,\n          addItemToCheckout: this.addItemToCheckout,\n          removeItemFromCheckout: this.removeItemFromCheckout,\n          fetchCollection: this.fetchCollection,\n        }}\n      >\n        {this.props.children}\n      </ShopContext.Provider>\n    );\n  }\n}\n\nconst ShopConsumer = ShopContext.Consumer;\n\nexport { ShopConsumer, ShopContext };\n\nexport default ShopProvider;\n"]},"metadata":{},"sourceType":"module"}