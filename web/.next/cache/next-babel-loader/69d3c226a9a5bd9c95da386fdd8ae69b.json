{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanybouchard/Desktop/workspace/ojos/web/pages/collections/tops.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { ShopContext } from \"../../context/shopContext\"; // Sanity.io\n\nimport client from \"../../client\";\nimport urlFor from \"../../imageUrlBuilder\"; //Bootstrap\n\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Tops = props => {\n  const {\n    fetchCollections,\n    collections\n  } = React.useContext(ShopContext);\n  React.useEffect(() => {\n    fetchCollections();\n    return () => {};\n  }, [fetchCollections]);\n  if (!collections) return __jsx(\"div\", {\n    className: \"page-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Loading...\")));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"OJOS | Tops\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(\"h1\", {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Tops\"));\n}; // // Fetching data from Sanity.io with GROQ query\n// Tops.getInitialProps = async () => ({\n//   products: await client.fetch(`\n//     *[_type == \"product\" && category->title == \"Tops\"]|order(_createdAt desc){title, price, slug, image}\n//   `),\n// });\n\n\nexport default Tops;","map":{"version":3,"sources":["/Users/tiffanybouchard/Desktop/workspace/ojos/web/pages/collections/tops.js"],"names":["Head","ShopContext","client","urlFor","Container","Image","Row","Col","Tops","props","fetchCollections","collections","React","useContext","useEffect"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,2BAA5B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAoCC,KAAK,CAACC,UAAN,CAAiBZ,WAAjB,CAA1C;AAEAW,EAAAA,KAAK,CAACE,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,gBAAgB;AAChB,WAAO,MAAM,CAAE,CAAf;AACD,GAHD,EAGG,CAACA,gBAAD,CAHH;AAKA,MAAI,CAACC,WAAL,EACE,OACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF;AAOF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF;AA6CD,CA7DD,C,CA+DA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,IAAf","sourcesContent":["import Head from \"next/head\";\nimport { ShopContext } from \"../../context/shopContext\";\n// Sanity.io\nimport client from \"../../client\";\nimport urlFor from \"../../imageUrlBuilder\";\n\n//Bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Tops = (props) => {\n  const { fetchCollections, collections } = React.useContext(ShopContext);\n\n  React.useEffect(() => {\n    fetchCollections();\n    return () => {};\n  }, [fetchCollections]);\n\n  if (!collections)\n    return (\n      <div className=\"page-spinner\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </div>\n    );\n  return (\n    <div>\n      <Head>\n        <title>OJOS | Tops</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <h1 className=\"page-title\">Tops</h1>\n      {/* <Container fluid=\"lg\">\n        <Row>\n          {products ? (\n            products.map((product) => (\n              <Col xs={12} sm={6} md={6} lg={4} key={product.id}>\n                <div className=\"product-section\">\n                  <a href={`/products/${product.handle}`}>\n                    <Image\n                      className=\"products\"\n                      fluid\n                      src={product.images[0].src}\n                    />\n                  </a>\n                </div>\n                <div className=\"product-description\">\n                  <a\n                    href={`/products/${product.handle}`}\n                    className=\"product-name\"\n                  >\n                    {product.title}\n                  </a>\n                  <a href=\"/products/:id\" className=\"product-price\">\n                    {product.availableForSale\n                      ? \"$\" + product.variants[0].price\n                      : \"Sold out\"}\n                  </a>\n                </div>\n              </Col>\n            ))\n          ) : (\n            <div className=\"no-products-msg\">\n              <p>No products right now, check back later!</p>\n            </div>\n          )}\n        </Row>\n      </Container> */}\n    </div>\n  );\n};\n\n// // Fetching data from Sanity.io with GROQ query\n// Tops.getInitialProps = async () => ({\n//   products: await client.fetch(`\n//     *[_type == \"product\" && category->title == \"Tops\"]|order(_createdAt desc){title, price, slug, image}\n//   `),\n// });\n\nexport default Tops;\n"]},"metadata":{},"sourceType":"module"}